{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
    public int[][] insert(int[][] intervals, int[] newInterval) \{\
        \
        List<int[]> result = new ArrayList<>();\
        int i = 0;\
       // boolean isNewRowinserted = false;\
        while(i < intervals.length) \{\
            if(intervals[i][0] > newInterval[0]) \{\
                result.add(newInterval);\
         //       isNewRowinserted =  true;\
                break;\
            \}\
            result.add(intervals[i++]);\
        \}\
        \
        while(i < intervals.length) \{\
            result.add(intervals[i++]);\
        \}\
        /*if (!isNewRowinserted) \{\
            result.add(newInterval);\
        \}*/\
        \
        if (intervals.length == result.size()) \{\
            result.add(newInterval);\
        \}\
        \
        return mergeSortedIntervals(result);\
    \}\
    \
    \
    private int[][] mergeSortedIntervals(List<int[]> intervals) \{\
        \
        if (intervals == null || intervals.size() == 0) \{\
            return new int[0][0];\
        \}\
        \
        for(int i = 1; i < intervals.size(); i++)\{\
            if (intervals.get(i)[0] <= intervals.get(i-1)[1]) \{\
                intervals.get(i-1)[1] = Math.max(intervals.get(i)[1],                                                   intervals.get(i-1)[1]);\
                intervals.remove(i);\
                i--;\
            \}\
        \}\
        \
        return intervals.toArray(new int[0][0]);\
    \}\
\}}